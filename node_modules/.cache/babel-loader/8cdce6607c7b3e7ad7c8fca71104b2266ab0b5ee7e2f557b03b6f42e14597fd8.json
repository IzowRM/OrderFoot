{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RobinMougne\\\\Desktop\\\\React\\\\react-complete-guide-code-11-practice-food-order-app\\\\react-complete-guide-code-11-practice-food-order-app\\\\code\\\\12-finished\\\\src\\\\components\\\\formOrder\\\\FormRegister.js\",\n  _s = $RefreshSig$();\nimport classes from '../Cart/Cart.module.css';\nimport useInput from \"../../hooks/use-Input\";\nimport Modal from \"../UI/Modal\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FormRegister = props => {\n  _s();\n  const [idExist, setIdExist] = useState(false);\n  function idExistHandler() {}\n  async function addIdentifierHandler(dataLogin) {\n    //Demamde de data\n    let idExists = false;\n    try {\n      const response = await fetch('https://mdpdinner-ee1eb-default-rtdb.europe-west1.firebasedatabase.app/identifiant.json');\n      const data = await response.json();\n      const dataLogin = Object.keys(data).map(key => ({\n        id: key,\n        ...data[key]\n      }));\n      console.log(dataLogin);\n      idExists = dataLogin.some(entry => entry.id === enteredName);\n      console.log(idExists);\n    } catch (error) {\n      console.error('Error fetching menu:', error);\n    }\n    if (!idExists) {\n      // si  c4est bon on envoie et  on login\n      const response = await fetch('https://mdpdinner-ee1eb-default-rtdb.europe-west1.firebasedatabase.app/identifiant.json', {\n        method: 'POST',\n        body: JSON.stringify(dataLogin),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      console.log(data);\n    } else {\n      setIdExist(true);\n    }\n  }\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput\n  } = useInput(value => value.trim() !== '');\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput\n  } = useInput(value => value.includes('@'));\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    if (!enteredNameIsValid) {\n      return;\n    }\n    console.log(enteredName);\n    const identifier = {\n      id: enteredName,\n      password: enteredEmail\n    };\n    addIdentifierHandler(identifier);\n    // nameInputRef.current.value = ''; => NOT IDEAL, DON'T MANIPULATE THE DOM\n    resetNameInput();\n    resetEmailInput();\n  };\n  const nameInputClasses = nameInputHasError ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailInputHasError ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formSubmissionHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: nameInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Your Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: nameChangedHandler,\n          onBlur: nameBlurHandler,\n          value: enteredName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Name must not be empty.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: emailInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          onChange: emailChangeHandler,\n          onBlur: emailBlurHandler,\n          value: enteredEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), emailInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Please enter a valid email.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !formIsValid,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes['button--alt'],\n          onClick: props.onregisteredHandlers,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), idExist && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your id exists\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n_s(FormRegister, \"SyLfpiwVO6l558fair1opLECXpQ=\", false, function () {\n  return [useInput, useInput];\n});\n_c = FormRegister;\nvar _c;\n$RefreshReg$(_c, \"FormRegister\");","map":{"version":3,"names":["classes","useInput","Modal","useState","jsxDEV","_jsxDEV","FormRegister","props","_s","idExist","setIdExist","idExistHandler","addIdentifierHandler","dataLogin","idExists","response","fetch","data","json","Object","keys","map","key","id","console","log","some","entry","enteredName","error","method","body","JSON","stringify","headers","value","isValid","enteredNameIsValid","hasError","nameInputHasError","valueChangeHandler","nameChangedHandler","inputBlurHandler","nameBlurHandler","reset","resetNameInput","trim","enteredEmail","enteredEmailIsValid","emailInputHasError","emailChangeHandler","emailBlurHandler","resetEmailInput","includes","formIsValid","formSubmissionHandler","event","preventDefault","identifier","password","nameInputClasses","emailInputClasses","onClose","children","onSubmit","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onBlur","disabled","onClick","onregisteredHandlers","_c","$RefreshReg$"],"sources":["C:/Users/RobinMougne/Desktop/React/react-complete-guide-code-11-practice-food-order-app/react-complete-guide-code-11-practice-food-order-app/code/12-finished/src/components/formOrder/FormRegister.js"],"sourcesContent":["import classes from '../Cart/Cart.module.css';\r\nimport useInput from \"../../hooks/use-Input\";\r\nimport Modal from \"../UI/Modal\";\r\nimport {useState} from \"react\";\r\n\r\nexport const FormRegister = (props) => {\r\n  const [idExist,setIdExist] = useState(false);\r\n\r\n  function idExistHandler(){\r\n\r\n  }\r\n    async function addIdentifierHandler(dataLogin) {\r\n        //Demamde de data\r\nlet idExists = false;\r\n            try {\r\n                const response = await fetch('https://mdpdinner-ee1eb-default-rtdb.europe-west1.firebasedatabase.app/identifiant.json');\r\n                const data = await response.json();\r\n\r\n                const dataLogin = Object.keys(data).map(key => ({\r\n                    id: key,\r\n                    ...data[key]\r\n                }));\r\n                console.log(dataLogin);\r\n               idExists= dataLogin.some(entry => entry.id === enteredName)\r\n                console.log(idExists)\r\n            } catch (error) {\r\n                console.error('Error fetching menu:', error);\r\n            }\r\n            if(!idExists) {\r\n                // si  c4est bon on envoie et  on login\r\n                const response = await fetch('https://mdpdinner-ee1eb-default-rtdb.europe-west1.firebasedatabase.app/identifiant.json', {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(dataLogin),\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                });\r\n                const data = await response.json();\r\n                console.log(data);\r\n            }\r\n            else {setIdExist(true)}\r\n    }\r\n\r\n    const {\r\n        value: enteredName,\r\n        isValid: enteredNameIsValid,\r\n        hasError: nameInputHasError,\r\n        valueChangeHandler: nameChangedHandler,\r\n        inputBlurHandler: nameBlurHandler,\r\n        reset: resetNameInput,\r\n    } = useInput((value) => value.trim() !== '');\r\n\r\n    const {\r\n        value: enteredEmail,\r\n        isValid: enteredEmailIsValid,\r\n        hasError: emailInputHasError,\r\n        valueChangeHandler: emailChangeHandler,\r\n        inputBlurHandler: emailBlurHandler,\r\n        reset: resetEmailInput,\r\n    } = useInput((value) => value.includes('@'));\r\n\r\n    let formIsValid = false;\r\n\r\n    if (enteredNameIsValid && enteredEmailIsValid) {\r\n        formIsValid = true;\r\n    }\r\n\r\n    const formSubmissionHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!enteredNameIsValid) {\r\n            return;\r\n        }\r\n\r\n        console.log(enteredName);\r\n\r\n        const identifier ={\r\n            id: enteredName,\r\n            password: enteredEmail\r\n        }\r\n        addIdentifierHandler(identifier)\r\n        // nameInputRef.current.value = ''; => NOT IDEAL, DON'T MANIPULATE THE DOM\r\n        resetNameInput();\r\n        resetEmailInput();\r\n    };\r\n\r\n    const nameInputClasses = nameInputHasError\r\n        ? 'form-control invalid'\r\n        : 'form-control';\r\n\r\n    const emailInputClasses = emailInputHasError\r\n        ? 'form-control invalid'\r\n        : 'form-control';\r\n\r\n\r\n\r\n    return (\r\n        <Modal onClose={props.onClose}>\r\n            <form onSubmit={formSubmissionHandler}>\r\n                <div className={nameInputClasses}>\r\n                    <label htmlFor='name'>Your Name</label>\r\n                    <input\r\n                        type='text'\r\n                        id='name'\r\n                        onChange={nameChangedHandler}\r\n                        onBlur={nameBlurHandler}\r\n                        value={enteredName}\r\n                    />\r\n                    {nameInputHasError && (\r\n                        <p className='error-text'>Name must not be empty.</p>\r\n                    )}\r\n                </div>\r\n                <div className={emailInputClasses}>\r\n                    <label htmlFor='email'>Your E-Mail</label>\r\n                    <input\r\n                        type='email'\r\n                        id='email'\r\n                        onChange={emailChangeHandler}\r\n                        onBlur={emailBlurHandler}\r\n                        value={enteredEmail}\r\n                    />\r\n                    {emailInputHasError && (\r\n                        <p className='error-text'>Please enter a valid email.</p>\r\n                    )}\r\n                </div>\r\n                <div className='form-actions'>\r\n                    <button disabled={!formIsValid}>Submit</button>\r\n                    <button className={classes['button--alt']} onClick={props.onregisteredHandlers}>\r\n                        Close\r\n                    </button>\r\n                </div>\r\n                {idExist && <p>Your id exists</p>}\r\n            </form>\r\n        </Modal>\r\n    );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAAQC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,OAAO,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE5C,SAASQ,cAAcA,CAAA,EAAE,CAEzB;EACE,eAAeC,oBAAoBA,CAACC,SAAS,EAAE;IAC3C;IACR,IAAIC,QAAQ,GAAG,KAAK;IACR,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yFAAyF,CAAC;MACvH,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,MAAML,SAAS,GAAGM,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC,CAACI,GAAG,CAACC,GAAG,KAAK;QAC5CC,EAAE,EAAED,GAAG;QACP,GAAGL,IAAI,CAACK,GAAG;MACf,CAAC,CAAC,CAAC;MACHE,OAAO,CAACC,GAAG,CAACZ,SAAS,CAAC;MACvBC,QAAQ,GAAED,SAAS,CAACa,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACJ,EAAE,KAAKK,WAAW,CAAC;MAC1DJ,OAAO,CAACC,GAAG,CAACX,QAAQ,CAAC;IACzB,CAAC,CAAC,OAAOe,KAAK,EAAE;MACZL,OAAO,CAACK,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;IACA,IAAG,CAACf,QAAQ,EAAE;MACV;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yFAAyF,EAAE;QACpHc,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACpB,SAAS,CAAC;QAC/BqB,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MACF,MAAMjB,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCM,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;IACrB,CAAC,MACI;MAACP,UAAU,CAAC,IAAI,CAAC;IAAA;EAC9B;EAEA,MAAM;IACFyB,KAAK,EAAEP,WAAW;IAClBQ,OAAO,EAAEC,kBAAkB;IAC3BC,QAAQ,EAAEC,iBAAiB;IAC3BC,kBAAkB,EAAEC,kBAAkB;IACtCC,gBAAgB,EAAEC,eAAe;IACjCC,KAAK,EAAEC;EACX,CAAC,GAAG5C,QAAQ,CAAEkC,KAAK,IAAKA,KAAK,CAACW,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;EAE5C,MAAM;IACFX,KAAK,EAAEY,YAAY;IACnBX,OAAO,EAAEY,mBAAmB;IAC5BV,QAAQ,EAAEW,kBAAkB;IAC5BT,kBAAkB,EAAEU,kBAAkB;IACtCR,gBAAgB,EAAES,gBAAgB;IAClCP,KAAK,EAAEQ;EACX,CAAC,GAAGnD,QAAQ,CAAEkC,KAAK,IAAKA,KAAK,CAACkB,QAAQ,CAAC,GAAG,CAAC,CAAC;EAE5C,IAAIC,WAAW,GAAG,KAAK;EAEvB,IAAIjB,kBAAkB,IAAIW,mBAAmB,EAAE;IAC3CM,WAAW,GAAG,IAAI;EACtB;EAEA,MAAMC,qBAAqB,GAAIC,KAAK,IAAK;IACrCA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAI,CAACpB,kBAAkB,EAAE;MACrB;IACJ;IAEAb,OAAO,CAACC,GAAG,CAACG,WAAW,CAAC;IAExB,MAAM8B,UAAU,GAAE;MACdnC,EAAE,EAAEK,WAAW;MACf+B,QAAQ,EAAEZ;IACd,CAAC;IACDnC,oBAAoB,CAAC8C,UAAU,CAAC;IAChC;IACAb,cAAc,CAAC,CAAC;IAChBO,eAAe,CAAC,CAAC;EACrB,CAAC;EAED,MAAMQ,gBAAgB,GAAGrB,iBAAiB,GACpC,sBAAsB,GACtB,cAAc;EAEpB,MAAMsB,iBAAiB,GAAGZ,kBAAkB,GACtC,sBAAsB,GACtB,cAAc;EAIpB,oBACI5C,OAAA,CAACH,KAAK;IAAC4D,OAAO,EAAEvD,KAAK,CAACuD,OAAQ;IAAAC,QAAA,eAC1B1D,OAAA;MAAM2D,QAAQ,EAAET,qBAAsB;MAAAQ,QAAA,gBAClC1D,OAAA;QAAK4D,SAAS,EAAEL,gBAAiB;QAAAG,QAAA,gBAC7B1D,OAAA;UAAO6D,OAAO,EAAC,MAAM;UAAAH,QAAA,EAAC;QAAS;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACvCjE,OAAA;UACIkE,IAAI,EAAC,MAAM;UACXhD,EAAE,EAAC,MAAM;UACTiD,QAAQ,EAAE/B,kBAAmB;UAC7BgC,MAAM,EAAE9B,eAAgB;UACxBR,KAAK,EAAEP;QAAY;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC,EACD/B,iBAAiB,iBACdlC,OAAA;UAAG4D,SAAS,EAAC,YAAY;UAAAF,QAAA,EAAC;QAAuB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CACvD;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACNjE,OAAA;QAAK4D,SAAS,EAAEJ,iBAAkB;QAAAE,QAAA,gBAC9B1D,OAAA;UAAO6D,OAAO,EAAC,OAAO;UAAAH,QAAA,EAAC;QAAW;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1CjE,OAAA;UACIkE,IAAI,EAAC,OAAO;UACZhD,EAAE,EAAC,OAAO;UACViD,QAAQ,EAAEtB,kBAAmB;UAC7BuB,MAAM,EAAEtB,gBAAiB;UACzBhB,KAAK,EAAEY;QAAa;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC,EACDrB,kBAAkB,iBACf5C,OAAA;UAAG4D,SAAS,EAAC,YAAY;UAAAF,QAAA,EAAC;QAA2B;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAC3D;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACNjE,OAAA;QAAK4D,SAAS,EAAC,cAAc;QAAAF,QAAA,gBACzB1D,OAAA;UAAQqE,QAAQ,EAAE,CAACpB,WAAY;UAAAS,QAAA,EAAC;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC/CjE,OAAA;UAAQ4D,SAAS,EAAEjE,OAAO,CAAC,aAAa,CAAE;UAAC2E,OAAO,EAAEpE,KAAK,CAACqE,oBAAqB;UAAAb,QAAA,EAAC;QAEhF;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,EACL7D,OAAO,iBAAIJ,OAAA;QAAA0D,QAAA,EAAG;MAAc;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEhB,CAAC;AAAC9D,EAAA,CAlIWF,YAAY;EAAA,QA6CjBL,QAAQ,EASRA,QAAQ;AAAA;AAAA4E,EAAA,GAtDHvE,YAAY;AAAA,IAAAuE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}